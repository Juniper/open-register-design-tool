/*   Ordt 190725.01 autogenerated file 
 *   Input: ./rdl_intr_01/test.rdl
 *   Parms: ./rdl_intr_01/test.parms
 *   Date: Sun Nov 17 17:01:01 EST 2019
 */

register_set foo "Registers for foo" {

  address = 0x0;
  register_width = 32;
  register_set bar "bar register_set" {
    address = 0x0;
    
    register a_reg "a_reg register" {
      address = 0x0;
      repeat = 2;
      nop[16];
      integer fld2[1] "fld2 field" param {
        access_mode = READ_WRITE;
        reset = unknown;
      };
      nop[5];
      integer fld1[10] "fld1 field" param {
        access_mode = READ_WRITE;
        reset = 0x0;
      };
    };
    
    register intr_reg1 "intr_reg1 register" {
      address = 0x100;
      nop[30];
      integer int2[1] "interrupt 2" param {
        access_mode = WRITE_ONE_TO_CLEAR;
        reset = 0x0;
      };
      integer int1[1] "interrupt 1" param {
        access_mode = WRITE_ONE_TO_CLEAR;
        reset = 0x0;
      };
    };
    
    register log_reg1 "log_reg1 register" {
      address = 0x104;
      nop[22];
      integer err_log[10] "error log field" param {
        description = "{
          this field will capture the incoming value of the hw write bus while intr_reg1.int1 is inactive
        }";
        access_mode = READ_WRITE;
        reset = 0x0;
      };
    };
    
    register log_reg2 "log_reg2 register" {
      address = 0x108;
      nop[22];
      integer err_log[10] "error log field" param {
        description = "{
          this field will capture the incoming value of the hw write bus once when intr_reg1.int1 fires
        }";
        access_mode = READ_WRITE;
        reset = 0x0;
      };
    };
    
    register log_reg3 "log_reg3 register" {
      address = 0x10c;
      nop[22];
      integer err_log[10] "error log field" param {
        description = "{
          this field will capture the incoming value of the hw write bus while all interrupts in intr_reg1 are inactive
        }";
        access_mode = READ_WRITE;
        reset = 0x0;
      };
    };
    
    register_set sub "sub register_set" {
      address = 0x200;
      
      register intr_reg2 "intr_reg2 register" {
        address = 0x0;
        nop[30];
        integer int2[1] "interrupt 2" param {
          access_mode = WRITE_ONE_TO_CLEAR;
          reset = 0x0;
        };
        integer int1[1] "interrupt 1" param {
          access_mode = WRITE_ONE_TO_CLEAR;
          reset = 0x0;
        };
      };
      
      register intr_reg3 "intr_reg3 register" {
        address = 0x100;
        nop[30];
        integer int2[1] "interrupt 2" param {
          access_mode = WRITE_ONE_TO_CLEAR;
          reset = 0x0;
        };
        integer int1[1] "interrupt 1" param {
          access_mode = WRITE_ONE_TO_CLEAR;
          reset = 0x0;
        };
      };
      
      register_set_size = 0x104;
    };
    
    register rst_reg "rst_reg register" {
      address = 0x304;
      nop[18];
      integer fld4[3] "fld4 field" param {
        access_mode = READ_WRITE;
        reset = 0x4;
      };
      integer fld3[3] "fld3 field" param {
        access_mode = READ_WRITE;
        reset = 0x3;
      };
      integer fld1[4] "fld1 field" param {
        access_mode = READ_WRITE;
        reset = 0x1;
      };
      integer fld2[4] "fld2 field" param {
        access_mode = READ_WRITE;
        reset = 0x2;
      };
    };
    
    register negintr "Reg negedge intr" {
      address = 0x500;
      description = "{
        A register with negedge intr
      }";
      nop[31];
      integer interrupt[1] "negedge_intr check" param {
        description = "{
          checking that the negedge intr works
        }";
        access_mode = WRITE_ONE_TO_CLEAR;
        reset = 0x0;
      };
    };
    
    register bothintr "Reg bothedge intr" {
      address = 0x504;
      description = "{
        A register with bothedge intr
      }";
      nop[31];
      integer interrupt[1] "bothedge_intr check" param {
        description = "{
          checking that the bothedge intr works
        }";
        access_mode = WRITE_ONE_TO_CLEAR;
        reset = 0x0;
      };
    };
    
    register_set_size = 0x508;
  };
  
  register_set intr_cascade "intr_cascade register_set" {
    address = 0x1000;
    
    register merge "merge register" {
      address = 0x0;
      access_mode = READ_ONLY;
      nop[30];
      integer fld2[1] "fld2 field" param {
        access_mode = READ_ONLY;
        reset = 0x0;
      };
      integer fld1[1] "fld1 field" param {
        access_mode = READ_ONLY;
        reset = 0x0;
      };
    };
    
    register_set_size = 0x4;
  };
  
  register_set_size = 0x1004;
};

